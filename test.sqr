print ' === VALUES === ';
*~ a <~ 5;
var b = 20;
var c <~ 4.332;
*~ d = false;
*~ e <~ null;

print ' === STRINGS === ';
var s = "hello" + ' ' + "world";
print s;
print s:indexOf('w');
print s:split(" ");
print s.span(3, 5);
print s.length();

print ' === FUNQTIONS === ';
fq add(a, b) { <: a + b; }
print add(a, b);

print ' === QONTEXT === ';
fq outer(v) { fq inner() { return v; } return inner; }
var wrapper = outer('passed to inner');
print wrapper();

print ' === LISTS === ';
*~ c <~ [ 1, 5, [ 3 * 3, 5, time() ]];
print c;
c <+ 10;
print c;
print 'length: ' + str(length(c));

print ' === CLASSES === ';
class X { init(v) { this:v <~ v; }}
*~ x <~ X(c[2]);
print x:v;

print ' === FC-REFERENCE === ';
var f = time;
typeof f;
print f;
print f();

print ' === FIBONACCI === ';
fq fib(n) { if (n < 2) <: n; <: fib(n-1) + fib(n-2); }
print 'fib(8)';
print fib(8);
print 'fib(16)';
print fib(16);
print 'fib(24)';
print fib(24);

fq _fib(n) {
	*~ r <~ 1;
	*~ s <~ 0;
	*~ a <~ 0;
	while(n > 1) {
		s <~ r + a;
		a <~ r;
		r <~ s;
		n <~ n - 1;
	}
	<: r;
}